<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "ebook">

	<resultMap id="ebookDatabindMap" type="ebookDatabind">
		<id column="BIND_NO" property="bindNo"/>
		<result column="TITLE" property="title"/>
		<result column="AUTHOR" property="author"/>
		<result column="IMAGE" property="image"/>
		<result column="PRICE" property="price"/>
		<result column="ISBN" property="isbn"/>
		<result column="PUBDATE" property="pubdate"/>
		<result column="PUBLISHER" property="publisher"/>
		<result column="DESCRIPTION" property="description"/>
		<result column="LINK" property="link"/>
		<result column="CATEGORY_CODE" property="categoryCode"/>
		<result column="STOCK" property="stock"/>
		<result column="SALES_VOLUME" property="salesVolume"/>
		<result column="RATING" property="rating"/>
		<result column="EBOOK_RATING" property="ebookRating"/>
		<result column="EBOOK_SALES_VOLUME" property="ebookSalesVolume"/>
		<result column="PRIME_COST" property="primeCost"/>
		<association property="ebook" javaType="ebook">
			<id column="EBOOK_NO" property="ebookNo"/>
			<result column="FILEPATH" property="filepath"/>
		</association>
	</resultMap>
	
	<resultMap id="ebookMap" type="ebook">
		<id column="EBOOK_NO" property="ebookNo"/>
	</resultMap>
	
	<resultMap type="member" id="memberMap">
		<result column="member_id" property="memberId" />
		<result column="member_pw" property="memberPw" />
		<result column="member_name" property="memberName" />
		<result column="member_email" property="memberEmail" />
		<result column="member_phone" property="memberPhone" />
		<result column="member_address" property="memberAddress" />
		<result column="member_gender" property="memberGender" />
		<result column="member_birth" property="memberBirth" />
		<result column="member_point" property="memberPoint" />
		<result column="member_regidate" property="memberRegiDate" />
		<result column="member_memberGrade_no" property="memberGradeNo" />
		<result column="member_total_sale" property="memberTotalSale" />
		<result column="member_visit" property="memberVisit" />
		<result column="member_today" property="memberToday" />
	</resultMap>

	<insert id="insertBookDataIntoDatabase">
		INSERT INTO BOOK_EBOOK_DATABIND VALUES(
			SEQ_BOOK_EBOOK_DATABIND.NEXTVAL,
			#{title},
			#{author},
			#{image},
			#{price},
			#{isbn},
			#{pubdate},
			#{publisher},
			#{description},
			#{link},
			#{groupId},
			DEFAULT
		)
	</insert>
	
	<select id="search" resultMap="ebookDatabindMap">
		SELECT * FROM BOOK_EBOOK_DATABIND B, EBOOK E
		WHERE B.BIND_NO=E.EBOOK_NO(+)
		AND ${searchType} LIKE '%'||#{keyword}||'%'
		AND CATEGORY_CODE=#{categoryCode}
		ORDER BY 
		<choose>
			<when test="importancePubdate>importanceSales and importanceSales>importanceRating and importanceRating>importancePrice">
				PRICE ${priceOrder},
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importancePubdate>importanceSales and importanceSales>importancePrice and importancePrice>importanceRating">
				RATING ${ratingOrder},
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importancePubdate>importancePrice and importancePrice>importanceSales and importanceSales>importanceRating">
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importancePubdate>importancePrice and importancePrice>importanceRating and importanceRating>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder},
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importancePubdate>importanceRating and importanceRating>importanceSales and importanceSales>importancePrice">
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importancePubdate>importanceRating and importanceRating>importancePrice and importancePrice>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder},
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder}
			</when>
			<when test="importanceSales>importancePubdate and importancePubdate>importanceRating and importanceRating>importancePrice">
				PRICE ${priceOrder},
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceSales>importancePubdate and importancePubdate>importancePrice and importancePrice>importanceRating">
				RATING ${ratingOrder},
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceSales>importanceRating and importanceRating>importancePubdate and importancePubdate>importancePrice">
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceSales>importanceRating and importanceRating>importancePrice and importancePrice>importancePubdate">
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder},
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceSales>importancePrice and importancePrice>importancePubdate and importancePubdate>importanceRating">
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceSales>importancePrice and importancePrice>importanceRating and importanceRating>importancePubdate">
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder},
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder}
			</when>
			<when test="importanceRating>importanceSales and importanceSales>importancePrice and importancePrice>importancePubdate">
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importanceRating>importanceSales and importanceSales>importancePubdate and importancePubdate>importancePrice">
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importanceRating>importancePubdate and importancePubdate>importanceSales and importanceSales>importancePrice">
				PRICE ${priceOrder},
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importanceRating>importancePubdate and importancePubdate>importancePrice and importancePrice>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder},
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importanceRating>importancePrice and importancePrice>importancePubdate and importancePubdate>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importanceRating>importancePrice and importancePrice>importanceSales and importanceSales>importancePubdate">
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder},
				RATING ${ratingOrder}
			</when>
			<when test="importancePrice>importanceRating and importanceRating>importancePubdate and importancePubdate>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder},
				PRICE ${priceOrder}
			</when>
			<when test="importancePrice>importanceRating and importanceRating>importanceSales and importanceSales>importancePubdate">
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder},
				PRICE ${priceOrder}
			</when>
			<when test="importancePrice>importanceSales and importanceSales>importanceRating and importanceRating>importancePubdate">
				PUBDATE ${pubdateOrder},
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder}
			</when>
			<when test="importancePrice>importanceSales and importanceSales>importancePubdate and importancePubdate>importanceRating">
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder},
				PRICE ${priceOrder}
			</when>
			<when test="importancePrice>importancePubdate and importancePubdate>importanceRating and importanceRating>importanceSales">
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder},
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder}
			</when>
			<when test="importancePrice>importancePubdate and importancePubdate>importanceSales and importanceSales>importanceRating">
				RATING ${ratingOrder},
				B.SALES_VOLUME ${salesOrder},
				PUBDATE ${pubdateOrder},
				PRICE ${priceOrder}
			</when>
			<otherwise>
				PUBDATE ${pubdateOrder},
				B.SALES_VOLUME ${salesOrder},
				RATING ${ratingOrder},
				PRICE ${priceOrder}
			</otherwise>
		</choose>
	</select>
	
	<insert id="uploadEbook">
		INSERT INTO EBOOK VALUES(#{ebookNo}, #{filepath}, DEFAULT)
	</insert>
	
	<select id="login" resultMap="memberMap">
		SELECT * FROM MEMBER WHERE MEMBER_ID=#{memberId}
	</select>
	
	<select id="searchOneBook" resultMap="ebookDatabindMap">
		SELECT * FROM BOOK_EBOOK_DATABIND B, EBOOK E WHERE B.BIND_NO=E.EBOOK_NO(+) AND BIND_NO=#{bindNo}
	</select>
	
	<select id="checkLoved" resultType="_int">
		SELECT COUNT(*) FROM EBOOK_LIKE WHERE MEMBER_ID=#{loginMemberId} AND EBOOK_NO=#{bindNo}
	</select>
	
	<select id="checkShopped" resultType="_int">
		SELECT COUNT(*) FROM EBOOK_SHOPPINGBASKET WHERE MEMBER_ID=#{loginMemberId} AND EBOOK_NO=#{bindNo}
	</select>
	
	<insert id="loveBook">
		INSERT INTO EBOOK_LIKE VALUES(#{loginMemberId}, #{bindNo})
	</insert>
	
	<delete id="unloveBook">
		DELETE FROM EBOOK_LIKE WHERE MEMBER_ID=#{loginMemberId} AND EBOOK_NO=#{bindNo}
	</delete>
	
	<insert id="putInShoppingBasket">
		INSERT INTO EBOOK_SHOPPINGBASKET VALUES(#{loginMemberId},#{bindNo})
	</insert>
	
	<delete id="putOutShoppingBasket">
		DELETE FROM EBOOK_SHOPPINGBASKET WHERE MEMBER_ID=#{loginMemberId} AND EBOOK_NO=#{bindNo}
	</delete>
	
	<select id="getMyBooksFromBasket" resultType="HashMap">
		SELECT * FROM BOOK_EBOOK_DATABIND B, EBOOK E, EBOOK_SHOPPINGBASKET S WHERE S.EBOOK_NO=B.BIND_NO AND B.BIND_NO=E.EBOOK_NO(+) AND S.MEMBER_ID=#{loginMemberId}
	</select>
	
	<insert id="writePurchaseLog">
		INSERT INTO EBOOK_PURCHASE_HISTORY VALUES(SEQ_EBOOK_PURCHASE_HISTORY.NEXTVAL,#{impUid},#{merchantUid},#{memberId},#{payMethod},#{paidAmount},#{paidAt},#{pgProvider},#{receiptUrl},#{purchaseEbookNoList})
	</insert>
	
	<select id="checkClubName" resultType="_int">
		SELECT COUNT(*) FROM READING_CLUB WHERE CLUB_NAME=#{clubName}
	</select>
	
	<insert id="createClub">
		INSERT INTO READING_CLUB VALUES(#{clubName},#{memberId},NULL)
	</insert>
	
	<select id="showMyClubList" resultType="HashMap">
		SELECT * FROM READING_CLUB C, READING_CLUB_MEMBER M WHERE C.CLUB_NAME=M.CLUB_NAME(+)
		AND M.MEMBER_ID=#{memberId}
	</select>
	
	<select id="showClubInfo" resultType="HashMap">
		SELECT C.CLUB_NAME, C.LEADER, CM.MEMBER_ID, M.MEMBER_NAME, M.MEMBER_GENDER, M.MEMBER_EMAIL, M.MEMBER_ADDRESS
		FROM MEMBER M, READING_CLUB C, READING_CLUB_MEMBER CM 
		WHERE M.MEMBER_ID=C.LEADER AND C.CLUB_NAME=CM.CLUB_NAME
		AND C.CLUB_NAME=#{clubName}
	</select>
	
	<select id="checkAuthority" resultType="HashMap">
		SELECT * FROM READING_CLUB WHERE CLUB_NAME=#{clubName}
	</select>
	
	<delete id="deleteClub">
		DELETE FROM READING_CLUB WHERE CLUB_NAME=#{clubName}
	</delete>
	
	<insert id="joinClub">
		INSERT INTO READING_CLUB_MEMBER VALUES(#{clubName},#{memberId})
	</insert>
	
	<delete id="deportMember">
		DELETE FROM READING_CLUB_MEMBER WHERE CLUB_NAME=#{clubName} AND MEMBER_ID=#{memberId}
	</delete>
	
	<insert id="saveMessage">
		INSERT INTO EBOOK_NOTICE VALUES(#{memberId},#{message})
	</insert>
	
	<delete id="deleteMessage">
		DELETE FROM EBOOK_NOTICE WHERE MEMBER_ID=#{memberId} AND MESSAGE=#{message}
	</delete>
	
	<select id="loadMessage" resultType="HashMap">
		SELECT MESSAGE FROM EBOOK_NOTICE WHERE MEMBER_ID=#{memberId}
	</select>
	
	<select id="getMyEbooks" resultType="HashMap">
		SELECT * FROM BOOK_EBOOK_DATABIND D, MEMBER_EBOOK_LIST L
		WHERE D.BIND_NO=L.EBOOK_NO
		AND L.MEMBER_ID=#{memberId}
	</select>
	
	<select id="getEbookFilepath" resultType="string">
		SELECT FILEPATH FROM EBOOK WHERE EBOOK_NO=#{bindNo}
	</select>
	
	<insert id="createSort">
		INSERT INTO MEMBER_EBOOK_LIST VALUES(#{memberId},NULL,#{sortName})
	</insert>
	
	<select id="listMySorts" resultType="string">
		SELECT DISTINCT SORT FROM MEMBER_EBOOK_LIST WHERE MEMBER_ID=#{memberId}
	</select>
	
	<update id="changeSort">
		UPDATE MEMBER_EBOOK_LIST SET SORT=#{selectedSort} WHERE MEMBER_ID=#{memberId} AND EBOOK_NO IN (${selectedEbookArr})
	</update>
	
	<delete id="cleanPseudoSortRow">
		DELETE FROM MEMBER_EBOOK_LIST WHERE MEMBER_ID=#{memberId} AND SORT=#{selectedSort} AND EBOOK_NO IS NULL
	</delete>
	
	<update id="deleteSort">
		UPDATE MEMBER_EBOOK_LIST SET SORT=NULL WHERE MEMBER_ID=#{memberId} AND SORT=#{selectedSort}
	</update>
	
	<delete id="cleanData">
		DELETE FROM MEMBER_EBOOK_LIST WHERE EBOOK_NO IS NULL AND SORT IS NULL
	</delete>
	
	<select id="changeBookshelf" resultType="hashmap">
		SELECT * FROM BOOK_EBOOK_DATABIND D, MEMBER_EBOOK_LIST L
		WHERE D.BIND_NO = L.EBOOK_NO
		AND L.MEMBER_ID = #{memberId}
		<if test="sortName != '나의 모든 e북'">
			AND L.SORT = #{sortName}
		</if>
	</select>
	
	<select id="dataCountFromSort" resultType="_int">
		SELECT COUNT(EBOOK_NO) FROM MEMBER_EBOOK_LIST WHERE MEMBER_ID=#{memberId} AND SORT=#{sortName}
	</select>
	
	<update id="liftFromSort">
		UPDATE MEMBER_EBOOK_LIST SET SORT=NULL WHERE MEMBER_ID=#{memberId} AND SORT=#{sortName} AND EBOOK_NO IN (${checkedArr})
	</update>
	
	<select id="dataCountAll" resultType="_int">
		SELECT COUNT(EBOOK_NO) FROM MEMBER_EBOOK_LIST WHERE MEMBER_ID=#{memberId}
	</select>

</mapper>
