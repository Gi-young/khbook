<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "admin">
  	
  	
  	<!-- <resultMap id="giftMap" type="gift">
		<id column="GIFT_NO" property="gift_no"/>
		<result column="GIFT_IMG" property="gift_img"/>
		<result column="GIFT_TITLE" property="gift_title"/>
		<result column="GIFT_CONTENT" property="gift_content"/>
		<result column="GIFT_PRICE" property="gift_price"/>
		<result column="GIFT_MAKER" property="gift_maker"/>
		<result column="GIFT_MADE" property="gift_made"/>
		<result column="GIFT_IMPORT" property="gift_import"/>
		<result column="GIFT_AS" property="gift_as"/>
		<result column="GIFT_SIZE" property="gift_size"/>
		<result column="GIFT_COUNT" property="gift_count"/>
		<result column="GIFT_FORSALE" property="gift_for_sale"/>
		<result column="GIFT_ROWPRICE" property="gift_rowprice"/>
		<result column="GIFT_GIFTCATE_CODE" property="gift_giftcate_code"/>
		<result column="GIFT_DISCOUNT" property="gift_discount"/>
		<result column="GIFT_SALESVOLUME" property="gift_salesVolume"/>
		<association property="giftcate" javaType="giftcate">
			<id column="giftCateCode" property="giftCateCode"/>
			<result column="GIFTCATE_NAME" property="giftCateName"/>
			<result column="GIFTCATE_FIRSTREF" property="giftCateFirstRef"/>
			<result column="GIFTCATE_SECONDREF" property="giftCateSecondRef"/>
		</association>
	</resultMap> -->
	<resultMap type="nGift" id="giftMap">
		<id column="NGIFT_NO" property="gift_no"/>
		<result column="NGIFT_TITLE" property="gift_title"/>
		<result column="NGIFT_IMG" property="gift_img"/>
		<result column="NGIFT_PRICE" property="gift_price"/>
		<result column="NGIFT_BRAND" property="gift_brand"/>
		<result column="NGIFT_MAKER" property="gift_maker"/>
		<result column="NGIFT_COUNT" property="gift_count"/>
		<result column="NGIFT_PRODUCT_TYPE" property="gift_productType"/>		
		<result column="NGIFT_ROWPRICE" property="gift_rowPrice"/>
		<result column="NGIFT_DISCOUNT" property="gift_discount"/>
		<result column="NGIFT_SALESVOLUME" property="gift_salesVolume"/>	
		<association javaType="giftCate" property="gift_category">
			<id column="NGIFT_CATE_CODE" property="giftCateCode"/>
			<result column="GIFTCATE_NAME" property="giftCateName"/>
			<result column="GIFTCATE_FIRSTREF" property="giftCateFirstRef"/>
			<result column="GIFTCATE_SECONDREF" property="giftCateSecondRef"/>
		</association>
	</resultMap>
	
  	
  	<resultMap id="ebookDatabindMap" type="ebookDatabind">
		<id column="BIND_NO" property="bindNo"/>
		<result column="TITLE" property="title"/>
		<result column="AUTHOR" property="author"/>
		<result column="IMAGE" property="image"/>
		<result column="PRICE" property="price"/>
		<result column="ISBN" property="isbn"/>
		<result column="PUBDATE" property="pubdate"/>
		<result column="PUBLISHER" property="publisher"/>
		<result column="DESCRIPTION" property="description"/>
		<result column="LINK" property="link"/>
		<result column="CATEGORY_CODE" property="categoryCode"/>
		<result column="STOCK" property="stock"/>
		<result column="SALES_VOLUME" property="salesVolume"/>
		<result column="RATING" property="rating"/>
		<result column="EBOOK_RATING" property="ebookRating"/>
		<result column="EBOOK_SALES_VOLUME" property="ebookSalesVolume"/>
		<result column="PRIME_COST" property="primeCost"/>
		<result column="DISCOUNT" property="discount"/>
		<association property="ebook" javaType="ebook">
			<id column="EBOOK_NO" property="ebookNo"/>
			<result column="FILEPATH" property="filepath"/>
			<result column="SALES_VOLUME" property="salesVolume"/>
		</association>
	</resultMap>
	
	<!-- 쿠폰에 상속해줄 부모 VO -->
	<resultMap type="couponlist" id="couponlistMap">
		<result column="couponlist_no" property="couponlistNo" />
		<result column="couponlist_membergrade_no"
			property="couponlistMembergradeNo" />
		<result column="couponlist_amount" property="couponlistAmount" />
		<result column="couponlist_foruse" property="couponlistForuse" />
		<result column="couponlist_invalid"
			property="couponlistInvalid" />
		<result column="couponlist_name" property="couponlistName" />
		<result column="coupon_img" property="couponImg" />
	</resultMap>

	<!-- 쿠폰리스트를 상속받는 쿠폰 VO -->
	<resultMap type="coupon" id="couponMap"
		extends="couponlistMap">
		<result column="coupon_no" property="couponNo" />
		<result column="coupon_invalid" property="couponInvalid" />
		<result column="coupon_couponlist_no"
			property="couponCouponlistNo" />
		<result column="coupon_canuse" property="couponCanuse" />
		<result column="coupon_member_id" property="couponMemberId" />
	</resultMap>
	
	<!-- 멤버에 상속해줄 부모 VO -->
	<resultMap type="membergrade" id="membergradeMap">
		<result column="membergrade_no" property="membergradeNo" />
		<result column="membergrade_name" property="membergradeName" />
		<result column="membergrade_standard"
			property="membergradeStandard" />
		<result column="membergrade_content"
			property="membergradeContent" />
		<result column="membergrade_img" property="membergradeImg" />
		<result column="membergrade_percent"
			property="membergradePercent" />
	</resultMap>

	<resultMap type="member" id="memberMap"
		extends="membergradeMap">
		<result column="member_id" property="memberId" />
		<result column="member_pw" property="memberPw" />
		<result column="member_name" property="memberName" />
		<result column="member_email" property="memberEmail" />
		<result column="member_phone" property="memberPhone" />
		<result column="member_address" property="memberAddress" />
		<result column="member_address_num" property="memberAddressNum" />
		<result column="member_detail_address" property="memberDetailAddress" />
		
		<result column="member_gender" property="memberGender" />
		<result column="member_birth" property="memberBirth" />
		<result column="member_point" property="memberPoint" />
		<result column="member_regidate" property="memberRegiDate" />
		<result column="member_memberGrade_no" property="memberGradeNo" />
		<result column="member_total_sale" property="memberTotalSale" />
		<result column="member_visit" property="memberVisit" />
		<result column="member_today" property="memberToday" />
	</resultMap>
	
	<resultMap id="ebookMap" type="ebook">
		<id column="EBOOK_NO" property="ebookNo"/>
		<result column="SALES_VOLUME" property="salesVolume"/>
	</resultMap>
	
	<resultMap type="delivery" id="deliveryMap">
		<result column="delivery_no" property="deliveryNo" />
		<result column="delivery_price" property="deliveryPrice" />
		<result column="delivery_status" property="deliveryStatus" />
	</resultMap>
	
	<!-- 책등록 -->
	<insert id="insertProduct1">
		INSERT INTO BOOK_EBOOK_DATABIND VALUES(SEQ_BOOK_EBOOK_DATABIND.NEXTVAL,#{title},#{author},#{image},#{price},#{isbn},#{pubdate},#{publisher},#{description},#{link},#{categoryCode},0,0,0,0,0,0,#{discount})
	</insert>
	
	<!-- 기프트 등록 -->
	<insert id="insertProduct3">
		INSERT INTO NGIFT VALUES(SEQ_GIFT_NO.NEXTVAL,#{gift_title},#{gift_img},#{gift_price},#{gift_brand},#{gift_maker},#{gift_category},0,0,#{gift_productType}, #{gift_discount}, 0)
	</insert>
	
	<!-- 책입고 -->
	<update id="updateProduct1">
		UPDATE BOOK_EBOOK_DATABIND SET STOCK=STOCK+#{stock},PRIME_COST=#{primeCost} WHERE BIND_NO=#{bindNo}
	</update>
	<!-- 상품 입고 -->
	<update id="updateProduct3">
		UPDATE NGIFT SET NGIFT_COUNT=NGIFT_COUNT+#{gift_count},NGIFT_ROWPRICE=#{gift_rowPrice} WHERE NGIFT_NO=#{gift_no}
	</update>
	
	<!--price조회컬럼 -->
	<select id="searchBringPrice" resultMap="ebookDatabindMap">
		SELECT PRICE FROM BOOK_EBOOK_DATABIND WHERE BIND_NO=#{bindNo}
	</select>
	
	<!-- 출고전 book 재고확인 -->
	<select id="checkStock1" resultMap="ebookDatabindMap">
		SELECT STOCK FROM BOOK_EBOOK_DATABIND WHERE BIND_NO=#{bindNo}
	</select>
	
	<!-- 출고전 gift 재고확인 -->
	<select id="checkStock3" resultMap="giftMap">
		SELECT NGIFT_COUNT FROM NGIFT WHERE NGIFT_NO=#{gift_no}
	</select>
	
	<!-- 재고에서 -출고개수 -->
  	<update id="outputProduct1">
  		UPDATE BOOK_EBOOK_DATABIND SET STOCK=STOCK-#{stock} WHERE BIND_NO=#{bindNo}
  	</update>
  	
  	<!-- book판매량에서 +출고개수 -->
  	<update id="updateSalesVolume1">
  		UPDATE BOOK_EBOOK_DATABIND SET SALES_VOLUME=SALES_VOLUME+#{stock} WHERE BIND_NO=#{bindNo}
  	</update>
  	
  	<!-- ebook판매량에서 +출고개수 -->
  	<update id="updateSalesVolume2">
  		UPDATE BOOK_EBOOK_DATABIND SET EBOOK_SALES_VOLUME=EBOOK_SALES_VOLUME+#{ebookSalesVolume} WHERE BIND_NO=#{bindNo}
  	</update>
  	
  	<!-- gift 재고 -출고 && 판매량+출고  -->
  	<update id="outputAndupdateSalesVolume3">
  		UPDATE NGIFT SET NGIFT_COUNT=NGIFT_COUNT-#{gift_count}, NGIFT_SALESVOLUME=NGIFT_SALESVOLUME+#{gift_count} WHERE NGIFT_NO=#{gift_no}
  	</update>
  	
  	<!-- 책 재고조회 -->
  	<select id="selectEbookDatabindList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND
  	</select>
  	<select id="selectEbookDataCount" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND
  	</select>
  	
  	
  	<!-- 상품 재고조회 -->
  	<select id="selectGiftList" resultMap="giftMap">
  		SELECT * FROM NGIFT
  	</select>
  	<select id="selectGiftCount" resultType="_int">
  		SELECT COUNT(*) FROM NGIFT
  	</select>
  	
  	
  	<!--재고 book 정렬 -->
  	<select id="orderStockList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND
  		WHERE 1=1
  		<if test="stockNum1 !=null and stockNum1!=''">
  		 	AND STOCK >= #{stockNum1}
  		</if>
  		<if test="stockNum2 !=null and stockNum2!=''">
  		 	AND STOCK &lt; #{stockNum2}
  		</if>
  	</select>
  	
  	<!-- 재고 book 페이지바 정렬 -->
  	<select id="getPageBarOrderList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND
  		WHERE 1=1
  		<if test="stockNum1 !=null and stockNum1!=''">
  		 	AND STOCK >= #{stockNum1}
  		</if>
  		<if test="stockNum2 !=null and stockNum2!=''">
  		 	AND STOCK &lt; #{stockNum2}
  		</if>
  	</select>
  	
  	<!--재고 gift 정렬 -->
  	<select id="orderStockList3" resultMap="giftMap">
  		SELECT * FROM NGIFT
  		WHERE 1=1
  		<if test="stockNum1 !=null and stockNum1!=''">
  		 	AND NGIFT_COUNT >= #{stockNum1}
  		</if>
  		<if test="stockNum2 !=null and stockNum2!=''">
  		 	AND NGIFT_COUNT &lt; #{stockNum2}
  		 </if>
  	</select>
  	
  	<!-- 재고 GIFT 페이지바 정렬 -->
  	<select id="getPageBarOrderList3" resultType="_int">
  		SELECT COUNT(*) FROM NGIFT
  		WHERE 1=1
  		<if test="stockNum1 !=null and stockNum1!=''">
  		 	AND NGIFT_COUNT >= #{stockNum1}
  		</if>
  		<if test="stockNum2 !=null and stockNum2!=''">
  		 	AND NGIFT_COUNT &lt; #{stockNum2}
  		 </if>
  	</select>
  	
  	<!--재고현황 book 검색-->
  	<select id="searchTextStockList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type4 == 'no'">
				 BIND_NO=#{search5}
			</when>
			<when test="type4 == 'title'">
				TITLE LIKE '%'||#{search5}||'%'
			</when>
		</choose>
  	</select>
  	
  	<!-- 재고 book 페이지바 정렬 -->
  	<select id="getPageBarTextStockList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type4 == 'no'">
				 BIND_NO=#{search5}
			</when>
			<when test="type4 == 'title'">
				TITLE LIKE '%'||#{search5}||'%'
			</when>
		</choose>
  	</select>
  	
  	
  	<!--재고현황 gift 검색-->
  	<select id="searchTextStockList3" resultMap="giftMap">
  		SELECT * FROM NGIFT WHERE
  		<choose>
			<when test="type4 == 'no'">
				 NGIFT_NO=#{search5}
			</when>
			<when test="type4 == 'title'">
				NGIFT_TITLE LIKE '%'||#{search5}||'%'
			</when>
		</choose>
  	</select>
  	
  	<!-- 재고 GIFT 페이지바 정렬 -->
  	<select id="getPageBarTextStockList3" resultType="_int">
  		SELECT COUNT(*) FROM NGIFT WHERE
  		<choose>
			<when test="type4 == 'no'">
				 NGIFT_NO=#{search5}
			</when>
			<when test="type4 == 'title'">
				NGIFT_TITLE LIKE '%'||#{search5}||'%'
			</when>
		</choose>
  	</select>
  	
  	<!-- 재고현황 책테이블 수정  -->
  	<update id="stockUpdate">
  		UPDATE BOOK_EBOOK_DATABIND SET TITLE=#{title} , PRICE=#{price} , PUBLISHER =#{publisher},CATEGORY_CODE=#{categoryCode} WHERE BIND_NO=#{bindNo}
  	</update>
  	<!-- 재고현황 gift테이블 수정  -->
  	<update id="stockUpdate2">
  		UPDATE NGIFT SET NGIFT_TITLE=#{gift_title}, NGIFT_PRICE=#{gift_price},NGIFT_CATE_CODE=#{gift_category} WHERE NGIFT_NO=#{gift_no}
  	</update>
  	
  	<!-- 재고현황 book 삭제 -->
  	<delete id="stockTDelete">
  		DELETE FROM BOOK_EBOOK_DATABIND WHERE BIND_NO=#{bindNo}
  	</delete>
  	
  	<!-- 재고현황 gift 삭제 -->
  	<delete id="stockTDelete2">
  		DELETE FROM NGIFT WHERE NGIFT_NO=#{gift_no}
  	</delete>
  	<!-- 쿠폰 등록 -->
  	<!-- <insert id="addCouponList">
  		INSERT INTO COUPONLIST VALUES(SEQ_COUPONLIST_NO.NEXTVAL,#{couponlistMembergradeNo},#{couponlistAmount},#{couponlistForuse},#{couponlistInvalid},#{couponlistName},#{couponImg})
  		<selectKey keyProperty="couponlistNo" resultType="_int" order="AFTER">
  			SELECT SEQ_COUPONLIST_NO.CURRVAL FROM DUAL
  		</selectKey>
  	</insert>
  	
  	<insert id="insertAttachment">
  		INSERT INTO ATTACHMENT VALUES(SEQ_ATTACHMENT_NO.NEXTVAL,#{couponlistNo},#{originalFilename},#{renamedFilename},DEFAULT,DEFAULT,DEFAULT)
  	</insert> -->
  	<insert id="addCouponList">
  		INSERT INTO COUPONLIST VALUES(SEQ_COUPONLIST_NO.NEXTVAL,#{couponlistMembergradeNo},#{couponlistAmount},#{couponlistForuse},#{couponlistInvalid},#{couponlistName},#{couponImg})
  	</insert>
  	<!--  -->
  	
  	<!-- 쿠폰 발급전 등급조회 -->
  	<select id="searchGrade" resultMap="memberMap">
  		SELECT MEMBER_MEMBERGRADE_NO FROM MEMBER WHERE MEMBER_Id=#{id}
  	</select>
  	
  	<!-- 쿠폰 발급전 만료기간 -->
  	<select id="searchInvalidNImg" resultMap="couponlistMap">
  		SELECT COUPONLIST_INVALID FROM COUPONLIST WHERE COUPONLIST_NO=#{couponlistNum}
  	</select>
  	
  	<!-- 쿠폰 발급전 쿠폰번호가 있는지 조회 -->
  	<select id="searchCoupon" resultMap="couponlistMap">
  		SELECT COUPONLIST_NO FROM COUPONLIST WHERE COUPONLIST_NO=#{couponlistNo}
  	</select>
  	
  	<!-- 쿠폰발급 1인용-->
  	<insert id="inputCouponAdminOne">
  		INSERT INTO COUPON VALUES(SEQ_COUPON_NO.NEXTVAL,SYSDATE+${couponinvalid},#{couponMemberId},#{couponCouponListNo},#{couponCanuse})
  	</insert>
  	
  	<!-- 쿠폰발급 다수 조회 -->
  	<select id="searchMemberByGrade" resultType="hashmap">
  		SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_MEMBERGRADE_NO=#{memberGradeNo}
  	</select>
  	
  	<!-- 쿠폰발급 다수 -->
  	<insert id="insertCoupon">
  		INSERT INTO COUPON VALUES(SEQ_COUPON_NO.NEXTVAL,SYSDATE+${couponinvalid},#{memberId},#{couponCouponListNo},#{couponCanuse})
  	</insert>
  	
  	
  	<!-- 쿠폰 조회  -->
  	<select id="searchCouponlist" resultMap="couponlistMap">
  		SELECT * FROM COUPONLIST ORDER BY COUPONLIST_NO ASC
  	</select>
  	<select id="selectCouponListCount" resultType="_int">
  		SELECT COUNT(*) FROM COUPONLIST
  	</select>
  	
  	<!-- 쿠폰검색 -->
  	<select id="searchCouponL" resultMap="couponlistMap">
  		SELECT * FROM COUPONLIST WHERE
  		<choose>
  			<when test="type15 =='COUPONLIST_NO'">
  				COUPONLIST_NO=#{search}
  			</when>
  			<when test="type15 =='COUPONLIST_NAME'">
  				COUPONLIST_NAME LIKE '%'||#{search}||'%'
  			</when>
  		</choose>
  	</select>
  	
  	<!-- 쿠폰검색 페이지바 -->
  	<select id="getPageBarSearchCouponList" resultType="_int">
  		SELECT COUNT(*) FROM COUPONLIST WHERE
  		<choose>
  			<when test="type15 =='COUPONLIST_NO'">
  				COUPONLIST_NO=#{search}
  			</when>
  			<when test="type15 =='COUPONLIST_NAME'">
  				COUPONLIST_NAME LIKE '%'||#{search}||'%'
  			</when>
  		</choose>
  	</select>
  	<!-- 쿠폰 수정 -->
  	<update id="updateCouponlist">
  		UPDATE COUPONLIST SET COUPONLIST_MEMBERGRADE_NO=#{couponlistMembergradeNo},
  		COUPONLIST_AMOUNT=#{couponlistAmount},COUPONLIST_FORUSE=#{couponlistForuse},
  		COUPONLIST_INVALID=#{couponlistInvalid},COUPONLIST_NAME=#{couponlistName} WHERE COUPONLIST_NO=#{couponlistNo}
  	</update>
  	
  	<!-- 쿠폰삭제 -->
  	<delete id="adCouponDelete">
  		DELETE FROM COUPONLIST WHERE COUPONLIST_NO=#{couponlistNo}
  	</delete>
  	
  	
  	<resultMap type="com.rar.khbook.auction.model.vo.AuctionCate" id="AuctionCateMap">
		<result column="auctioncate_code" property="auctioncateCode"/>
		<result column="auctioncate_name" property="auctioncateName"/>
		<result column="auctioncate_first" property="auctioncateFirst"/>
	</resultMap>
  	
  	<!-- 경매관리 -->
  	<select id="selectAuctionList" resultMap="AuctionCateMap">
  		SELECT * FROM AUCTIONCATE
  	</select>
  	<!-- 경매 카테고리 추가  -->
  	<insert id="addAuctionCate">
  		INSERT INTO AUCTIONCATE VALUES(SEQ_AUCTIONCATE_NO.NEXTVAL,#{type9},#{type10})
  	</insert>
  	<!-- 경매 카테고리 삭제 -->
  	<delete id="deleteAuctionCate">
  		DELETE FROM AUCTIONCATE WHERE AUCTIONCATE_NAME=#{type20} AND AUCTIONCATE_FIRST=#{type21}
  	</delete>
  	
  	<!-- 배송관리 -->
  	<select id="selectDeliveryList" resultMap="deliveryMap">
  		SELECT * FROM DELIVERYT ORDER BY DELIVERY_NO ASC
  	</select>
  	<select id="selectDeliveryCount" resultType="_int">
  		SELECT COUNT(*) FROM DELIVERYT
  	</select>
  	
  	<!-- 배송추가  -->
  	<insert id="insertDelivery">
  		INSERT INTO DELIVERYT VALUES(SEQ_DELIVERY_NO.NEXTVAL,#{deliveryType1})
  	</insert>
  	<!-- 배송업데이트  -->
  	<update id="updateDelivery">
  		UPDATE DELIVERYT SET DELIVERY_PRICE=#{deliveryType4} WHERE DELIVERY_NO=#{deliveryType3}
  	</update>
  	<!-- 배송삭제 -->
  	<delete id="deleteDelivery">
  		DELETE FROM DELIVERYT WHERE DELIVERY_NO=#{deliveryType6}
  	</delete>
  	
  	<!-- 북 총매출액 계산 -->
  	<select id="selectbookTotalCost" resultType="_int">
  		SELECT SUM((PRICE-PRIME_COST)*SALES_VOLUME) AS TOTALCOST FROM BOOK_EBOOK_DATABIND
  	</select>
  	<!-- 매출관리 북 정렬 -->
  	<select id="orderBookAList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND
  		<if test="type18=='cost'">
  			ORDER BY (PRICE-PRIME_COST)*SALES_VOLUME ${order} NULLS LAST
  		</if>
  		<if test="type18=='profit'">
  			ORDER BY (PRICE-PRIME_COST) ${order}
  		</if>
  		<if test="type18=='salesVolume'">
  			ORDER BY SALES_VOLUME ${order}
  		</if>
  	</select>
  	<!-- 매출관리 북 정렬 페이지바 -->
  	<select id="getPageBarorderBookAList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND
  		<if test="type18=='cost'">
  			ORDER BY (PRICE-PRIME_COST)*SALES_VOLUME ${order} NULLS LAST
  		</if>
  		<if test="type18=='profit'">
  			ORDER BY (PRICE-PRIME_COST) ${order}
  		</if>
  		<if test="type18=='salesVolume'">
  			ORDER BY SALES_VOLUME ${order}
  		</if>
  	</select>
  	
  	<!-- 매출관리 북 검색 -->
  	<select id="searchTextbookAList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type19 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type19 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  		
  	</select>
  	<!-- 매출관리 북 검색 페이지바 -->
  	<select id="getPageBarsearchTextbookAList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type19 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type19 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	<!-- 매출관리 북 total cost-->
  	<select id="searchbookTotalCost" resultType="_int">
  		SELECT SUM((PRICE-PRIME_COST)*SALES_VOLUME) FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type19 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type19 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	
  	<!-- 매출관리 ebook 매출액 -->
  	<select id="selectbookTotalCost2" resultType="_int">
  		SELECT SUM((PRICE-PRIME_COST)*EBOOK_SALES_VOLUME) AS TOTALCOST FROM BOOK_EBOOK_DATABIND
  	</select>
  	<!-- 매출관리 ebook북 정렬  -->
  	<select id="orderEBookAList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND
  		<if test="type21=='cost'">
  			ORDER BY (PRICE-PRIME_COST)*EBOOK_SALES_VOLUME ${order} NULLS LAST
  		</if>
  		<if test="type21=='profit'">
  			ORDER BY (PRICE-PRIME_COST) ${order}
  		</if>
  		<if test="type21=='salesVolume'">
  			ORDER BY EBOOK_SALES_VOLUME ${order}
  		</if>
  	</select>
  	<!-- 매출관리 ebook북 정렬 페이지바  -->
  	<select id="getPageBarorderEBookAList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND
  		<if test="type21=='cost'">
  			ORDER BY (PRICE-PRIME_COST)*EBOOK_SALES_VOLUME ${order} NULLS LAST
  		</if>
  		<if test="type21=='profit'">
  			ORDER BY (PRICE-PRIME_COST) ${order}
  		</if>
  		<if test="type21=='salesVolume'">
  			ORDER BY EBOOK_SALES_VOLUME ${order}
  		</if>
  	</select>
  	<!-- 매출관리 ebook 검색 -->
  	<select id="searchTextEbookAList" resultMap="ebookDatabindMap">
  		SELECT * FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type22 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type22 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  		
  	</select>
  	<!-- 매출관리 ebook 검색 페이지바-->
  	<select id="getPageBarsearchTextEbookAList" resultType="_int">
  		SELECT COUNT(*) FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type22 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type22 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	<!-- 매출관리 EBOOK 검색 총 매출액 -->
  	<select id="searchEbookTotalCost" resultType="_int">
  		SELECT SUM((PRICE-PRIME_COST)*EBOOK_SALES_VOLUME) FROM BOOK_EBOOK_DATABIND WHERE
  		<choose>
			<when test="type22 == 'BIND_NO'">
				 BIND_NO=#{search}
			</when>
			<when test="type22 == 'TITLE'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	<!-- 매출관리 gift 정렬 총 매출액 -->
  	<select id="selectgiftTotalCost" resultType="_int">
  		SELECT SUM((NGIFT_PRICE-NGIFT_ROWPRICE)*NGIFT_SALESVOLUME) AS TOTALCOST FROM NGIFT 
  		
  	</select>
  	
  	<!-- 매출 gift정렬 -->
  	<select id="orderGiftAList" resultMap="giftMap">
  		SELECT * FROM NGIFT
  		<if test="type23=='cost'">
  			ORDER BY (NGIFT_PRICE-NGIFT_ROWPRICE)*NGIFT_SALESVOLUME ${order} NULLS LAST
  		</if>
  		<if test="type23=='profit'">
  			ORDER BY (NGIFT_PRICE-NGIFT_ROWPRICE) ${order}
  		</if>
  		<if test="type23=='salesVolume'">
  			ORDER BY NGIFT_SALESVOLUME ${order}
  		</if>
  	</select>
  	<!-- 매출관리 기프트 정렬 페이지바  -->
  	<select id="getPageBarorderGiftAList" resultType="_int">
  		SELECT COUNT(*) FROM NGIFT
  		<if test="type23=='cost'">
  			ORDER BY (NGIFT_PRICE-NGIFT_ROWPRICE)*NGIFT_SALESVOLUME ${order} NULLS LAST
  		</if>
  		<if test="type23=='profit'">
  			ORDER BY (NGIFT_PRICE-NGIFT_ROWPRICE) ${order}
  		</if>
  		<if test="type23=='salesVolume'">
  			ORDER BY NGIFT_SALESVOLUME ${order}
  		</if>
  	</select>
  	
  	<!-- 매출관리 기프트 검색 -->
  	<select id="searchTextGiftAList" resultMap="giftMap">
  		SELECT * FROM NGIFT WHERE
  		<choose>
			<when test="type24 == 'NGIFT_NO'">
				 NGIFT_NO=#{search}
			</when>
			<when test="type24 == 'NGIFT_TITLE'">
				NGIFT_TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  		
  	</select>
  	<!-- 매출관리 기프트 검색 페이지바 -->
  	<select id="getPageBarsearchTextGiftAList" resultType="_int">
  		SELECT COUNT(*) FROM NGIFT WHERE
  		<choose>
			<when test="type24 == 'NGIFT_NO'">
				 NGIFT_NO=#{search}
			</when>
			<when test="type24 == 'NGIFT_TITLE'">
				NGIFT_TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	
  
  	<!-- 매출관리 gift 검색 총 매출액 -->
  	<select id="searchGiftTotalCost" resultType="_int">
  		SELECT SUM((NGIFT_PRICE-NGIFT_ROWPRICE)*NGIFT_SALESVOLUME) AS TOTALCOST FROM NGIFT WHERE
  		<choose>
			<when test="type24 == 'NGIFT_NO'">
				 NGIFT_NO=#{search}
			</when>
			<when test="type24 == 'NGIFT_TITLE'">
				NGIFT_TITLE LIKE '%'||#{search}||'%'
			</when>
		</choose>
  	</select>
  	
  	
  	<!-- 차트 book top3 -->
  	<select id="bookTopThree" resultMap="booktopthreeMap">
 <!--  		SELECT ROWNUM,b_title,b_total_cost,b_profit,sales_volume
  		FROM(
  			SELECT TITLE AS B_TITLE ,(PRICE-PRIME_COST)*SALES_VOLUME AS B_TOTAL_COST ,PRICE-PRIME_COST AS B_PROFIT, SALES_VOLUME 
			FROM BOOK_EBOOK_DATABIND ORDER BY (PRICE-PRIME_COST)*SALES_VOLUME DESC NULLS LAST
  		)B
  		WHERE ROWNUM &lt; 4  -->
  	        		SELECT TITLE AS bTitle ,(PRICE-PRIME_COST)*SALES_VOLUME AS btotalcost ,PRICE-PRIME_COST AS BPROFIT, PRICE*SALES_VOLUME AS bcost 
			FROM BOOK_EBOOK_DATABIND where rownum &lt;4 ORDER BY (PRICE-PRIME_COST)*SALES_VOLUME DESC NULLS LAST 
  		
  	</select>
  	<resultMap type="com.rar.khbook.adminchart.model.vo.BookTopThree" id="booktopthreeMap">
		<result column="SALES_VOLUME" property="bsalesVolume" />	
	</resultMap>
  	
  	<resultMap type="ebooktopthree" id="ebooktopthreeMap">
  		<result column="EBTITLE" property="ebtitle"/>
  		<result column="EBTOTALCOST" property="ebtotalcost"/>
  		<result column="EBPROFIT" property="ebprofit"/>
		<result column="EBCOST" property="ebcost" />	
	</resultMap>
  	
  	<select id="ebookTopThree" resultMap="ebooktopthreeMap">
  		SELECT TITLE AS ebTitle ,(PRICE-PRIME_COST)*EBOOK_SALES_VOLUME AS ebtotalcost ,PRICE-PRIME_COST AS eBPROFIT, PRICE*EBOOK_SALES_VOLUME AS EBCOST
			FROM BOOK_EBOOK_DATABIND where rownum &lt;4 ORDER BY (PRICE-PRIME_COST)*EBOOK_SALES_VOLUME DESC NULLS LAST
  	</select> 
  	
  	<resultMap type="gifttopthree" id="gifttopthreeMap">
  		<result column="NGTITLE" property="ngtitle"/>
  		<result column="NGIFTTOTALCOST" property="ngiftTotalcost"/>
  		<result column="NGIFTPROFIT" property="ngiftProfit"/>
		<result column="NGIFTCOST" property="ngiftCost" />	
	</resultMap>
  	<select id="giftTopThree" resultMap="gifttopthreeMap">
  		SELECT NGIFT_TITLE AS ngtitle ,(NGIFT_PRICE-NGIFT_COUNT)*NGIFT_SALESVOLUME AS ngiftTotalcost ,NGIFT_PRICE-NGIFT_COUNT AS ngiftProfit, NGIFT_PRICE*NGIFT_SALESVOLUME AS NGIFTCOST
			FROM NGIFT where rownum &lt;4 ORDER BY (NGIFT_PRICE-NGIFT_ROWPRICE)*NGIFT_SALESVOLUME DESC NULLS LAST 
  	</select>
  	<resultMap type="faq" id="faqMap">
  		<id column="FAQ_NO" property="faqNo"/>
  		<result column="FAQ_ASKED" property="faqAsked"/>
  		<result column="FAQ_ANSWER" property="faqAnswer"/>
  		<result column="FAQ_STATUS" property="faqStatus"/>
  		<association javaType="faqcg" property="faqcgNum">
  			<id column="FAQ_CATE_NUM" property="faqcgNum"/>
  			<!-- <result column="FAQCG_PAY" property="faqcgPay"/>
  			<result column="FAQCG_DELIVERY" property="faqcgDelivery"/>
  			<result column="FAQCG_RETURN" property="faqcgReturn"/>
  			<result column="FAQCG_USEDMARKET" property="faqcgUsedmarket"/>
  			<result column="FAQCG_EBOOK" property="faqcgEbook"/> -->
  			<result column="FAQ_CATE_NAME" property="faqcgName"/>
  		</association>
  	</resultMap>
  	
  	<select id="selectFaqList" resultMap="faqMap">
  		SELECT * FROM FAQ F JOIN FAQCG G ON F.FAQ_CATE_NUM=G.FAQ_CATE_NUM ORDER BY FAQ_NO DESC
  	</select>
  	
  	<insert id="inputAskFaq">
  		INSERT INTO FAQ VALUES(FAQ_NO.NEXTVAL,#{askFaq},NULL,0,
  		#{type31}
  		)
  	</insert>
  	
  	<select id="searchFaq" resultMap="faqMap">
  		SELECT * FROM FAQ F JOIN FAQCG G ON F.FAQ_CATE_NUM=G.FAQ_CATE_NUM 
  		WHERE F.FAQ_CATE_NUM= #{type30} AND FAQ_ASKED LIKE '%' || #{searchFaq} || '%'
		ORDER BY FAQ_NO DESC
  	</select>
  	
  	<select id="selectFaqReplyNo" resultMap="faqMap">
  		SELECT * FROM FAQ F JOIN FAQCG G ON F.FAQ_CATE_NUM=G.FAQ_CATE_NUM 
  		WHERE F.FAQ_NO=#{faqNo}
  	</select>
  	
  	<update id="updateFaqAnswer">
  		UPDATE FAQ SET FAQ_ANSWER=#{faqAnswer},FAQ_STATUS=1 WHERE FAQ_NO=#{faqNo}
  	</update>
  	
  	<delete id="deleteFaq">
  		DELETE FROM FAQ WHERE FAQ_NO=#{faqNo}
  	</delete>
  	
  	<resultMap type="order" id="orderMap">
		<result column="order_no" property="orderNo" />
		<result column="order_count" property="orderCount" />
		<result column="order_deliveryfee" property="orderDeliveryfee" />
		<result column="order_member_id" property="orderMemberId"/>
		<result column="order_coupon_no" property="orderCouponNo"/>
		<result column="order_status" property="orderStatus"/>
		<result column="order_point" property="orderPoint"/>
		<result column="order_totalprice" property="orderTotalprice"/>
		<result column="order_date" property="orderDate"/>
		<result column="order_name" property="orderName"/>
		<result column="order_phone" property="orderPhone"/>
		<result column="order_email" property="orderEmail"/>
		<result column="order_address" property="orderAddress"/>
	</resultMap>
  	
  	<select id="selectOrderList" resultMap="orderMap">
		SELECT * FROM ORDERT ORDER BY ORDER_DATE DESC
	</select>
	<select id="selectOrderCount" resultType="_int">
		SELECT COUNT(*) FROM
		ORDERT ORDER BY ORDER_DATE DESC
	</select>
	<!-- 판매내역 검색리스트 -->
	<select id="searchTextSaleList" resultMap="orderMap">
		SELECT * FROM ORDERT WHERE
		<choose>
			<when test="type51 == 'orderMemberId'">
				ORDER_MEMBER_ID LIKE '%'||#{search}||'%' ORDER BY ORDER_DATE DESC
			</when>
			<when test="type51 == 'orderNo'">
				ORDER_NO=#{search} ORDER BY ORDER_DATE DESC
			</when>
			<when test="type51 == 'orderStatus'">
				ORDER_STATUS LIKE '%'||#{search}||'%' ORDER BY ORDER_DATE DESC
			</when>
		</choose>
		
	</select>
	
	<!-- 판매내역 검색리스트 페이지바 -->
	<select id="getPageBarTextSaleList" resultType="_int">
		SELECT COUNT(*) FROM ORDERT WHERE
		<choose>
			<when test="type51 == 'orderMemberId'">
				ORDER_MEMBER_ID LIKE '%'||#{search}||'%'
			</when>
			<when test="type51 == 'orderNo'">
				ORDER_NO=#{search}
			</when>
			<when test="type51 == 'orderStatus'">
				ORDER_STATUS LIKE '%'||#{search}||'%'
			</when>
		</choose>
	</select>
	<!-- 판매내역 정렬 리스트 -->
	
	<!--재고 book 정렬 -->
  	<select id="orderSaleList" resultMap="orderMap">
  		SELECT * FROM ORDERT
  		WHERE 1=1
  		<if test="type =='day'">
  		 	AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') = #{searchSaleDate1}
  		</if>
  		<if test="type =='days'">
  		 	AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') <![CDATA[>=]]> #{searchSaleDate2} AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') <![CDATA[<=]]> #{searchSaleDate3}
  		</if>
  	</select>
  	
  	<!-- 재고 book 페이지바 정렬 -->
  	<select id="getPageBarorderSaleList" resultType="_int">
  		SELECT COUNT(*) FROM ORDERT
  		WHERE 1=1
  		<if test="type =='day'">
  		 	AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') = #{searchSaleDate1}
  		</if>
  		<if test="type =='days'">
  		 	AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') <![CDATA[>=]]> #{searchSaleDate2} AND TO_CHAR(ORDER_DATE,'YYYY-MM-DD') <![CDATA[<=]]> #{searchSaleDate3}
  		</if>
  	</select>
	
	
  	
  	
  	
</mapper>
